name: CI/CD Pipeline for QuickBite

on:
  push:
    branches:
      - piyumi  # Replace with your branch name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push user-service image
      - name: Build & Push user-service Docker image
        run: |
          docker build -t piyumir/user-service:latest ./back-end/user-service
          docker push piyumir/user-service:latest

      # Step 5: Build and push order-service image
      - name: Build & Push order-service Docker image
        run: |
          docker build -t piyumir/order-service:latest ./back-end/order-service
          docker push piyumir/order-service:latest

      # Step 6: Set up kubeconfig
      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          kind: Config
          clusters:
          - name: minikube
            cluster:
              server: https://192.168.49.2:8443
              certificate-authority-data: ${{ secrets.KUBECONFIG_CA_CERT }}
          contexts:
          - name: minikube
            context:
              cluster: minikube
              user: minikube
          current-context: minikube
          users:
          - name: minikube
            user:
              client-certificate-data: ${{ secrets.KUBECONFIG_CLIENT_CERT }}
              client-key-data: ${{ secrets.KUBECONFIG_CLIENT_KEY }}
          EOF

      # Step 7: Deploy to Kubernetes
      - name: Deploy services to Kubernetes
        run: |
          kubectl apply -f back-end/k8s/user-service.yaml
          kubectl apply -f back-end/k8s/order-service.yaml
